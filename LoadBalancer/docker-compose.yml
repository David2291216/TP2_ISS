version: '3.3'
services:
  php1:
      build: "./php/"
      networks:
          - backend1
      volumes:
          - ./web1/html:/usr/local/apache2/htdocs/
  php2:
      build: "./php/"
      networks:
          - backend2
      volumes:
          - ./web2/html:/usr/local/apache2/htdocs/
  proxy:
      image: nginx:alpine # utilise la version la plus récente
      networks: 
          - frontend
      ports:
          - '80:80' # expose 80 sur l'hôte et envoie à 80 dans conteneur
      volumes:
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  web1:
    #  image: httpd:alpine
      build: "./web1/"  # utilise la version httpd:lapine
      depends_on:
          - php1
      networks:
          - frontend
          - backend1
      volumes:
          - ./web1/html:/usr/local/apache2/htdocs/
  web2:
    # image: httpd:alpine
      build: "./web2/"  # utilise la version httpd:alpine
      depends_on:
          - php2
      networks:
          - frontend
          - backend2
      volumes:
          - ./web2/html:/usr/local/apache2/htdocs/
  mariadb1:
      image: mariadb
      restart: always
      networks:
          - backend1
      environment:
          - MYSQL_ROOT_PASSWORD=rootpassword
      volumes:
          - dbdata1:/var/lib/mysql
  mariadb2:
      image: mariadb
      restart: always
      networks:
          - backend2
      environment:
          - MYSQL_ROOT_PASSWORD=rootpassword
      volumes:
          - dbdata2:/var/lib/mysql

networks:
    frontend:
    backend1:
    backend2:
volumes:
    dbdata1:
    dbdata2:
